import { ILevel } from '../../../types/model';

const Levels: ILevel[] = [
  {
    mainTitle: 'You need to select jazz vinyls',
    taskTitle: 'Type Selector',
    description:
      'Selects all elements of type J. Type refers to the type of tag are all different element types.',
    exampleTitle: 'Example',
    levelName: 'J',
    example: 'J select all <J> elements',
    selectors: [
      { parent: 'jazz', isTarget: true },
      { parent: 'jazz', isTarget: true },
    ],
    correctSelector: 'jazz',
  },
  {
    mainTitle: 'You need to select all techno vinyls',
    taskTitle: 'Type Selector',
    description:
      'Selects all elements of type J. Type refers to the type of tag are all different element types.',
    exampleTitle: 'Example',
    levelName: 'J',
    example: 'J select all <J> elements',
    selectors: [
      { parent: 'techno', isTarget: true },
      { parent: 'pop' },
      { parent: 'techno', isTarget: true },
    ],
    correctSelector: 'techno',
  },
  {
    mainTitle: 'Select all the things!',
    taskTitle: 'The Universal Selector',
    description: 'You can select all elements with the universal selector!',
    exampleTitle: 'Example',
    levelName: '*',
    example: 'Universal Selector  *  select all elements',
    selectors: [
      { parent: 'acid', isTarget: true },
      { parent: 'techno', isTarget: true },
      { parent: 'pop', isTarget: true },
      { parent: 'jazz', isTarget: true },
    ],
    correctSelector: '*',
  },
  {
    mainTitle: 'Select first pop vinyls',
    taskTitle: 'First of type selector',
    description: 'Select the first element of a specific type',
    exampleTitle: 'Example',
    levelName: ':first-of-type',
    example: 'progress:first-of-type selects the first <progress> in any element',
    selectors: [
      { parent: 'acid' },
      { parent: 'pop', isTarget: true },
      { parent: 'pop' },
      { parent: 'acid' },
      { parent: 'synth', child: 'pop' },
    ],
    correctSelector: 'pop:first-of-type',
  },
  {
    mainTitle: 'Select all odd vinyls',
    taskTitle: 'Nth of Type Selector',
    description: 'You need to select all odd vinyls',
    exampleTitle: 'Example',
    levelName: ':nth-of-type(D)',
    example: '.vinyls:nth-of-type(even) selects all even instances of a the example class',
    selectors: [
      { parent: 'techno', isTarget: true },
      { parent: 'techno' },
      { parent: 'techno', isTarget: true },
      { parent: 'techno', child: 'house' },
      { parent: 'techno', isTarget: true },
    ],
    correctSelector: 'techno:nth-of-type(odd)',
  },
  {
    mainTitle: 'Select all clean pop vinyls',
    taskTitle: 'Empty Selector',
    description: `Select elements that don't have children`,
    exampleTitle: 'Example',
    levelName: ':empty',
    example: 'acronym:empty selects all empty <acronym> elements',
    selectors: [
      { parent: 'pop', isTarget: true },
      { parent: 'pop', child: 'house' },
      { parent: 'pop', child: 'house' },
      { parent: 'pop', isTarget: true },
      { parent: 'pop', child: 'synth' },
    ],
    correctSelector: 'pop:empty',
  },
  {
    mainTitle: 'Select the  all prereleases',
    taskTitle: 'Class Selector',
    description: 'The class selector selects all elements with that class attribute.',
    exampleTitle: 'Example',
    levelName: '.classname',
    example: '.idm selects all elements with class = "idm" ',
    selectors: [
      { parent: 'synth' },
      { parent: 'techno', child: 'house', isChildTarget: true, classChild: 'pre' },
      { parent: 'house' },
      { parent: 'pop', child: 'synth', isChildTarget: true, classChild: 'pre' },
    ],
    correctSelector: '.pre',
  },
  {
    mainTitle: 'Select the 4th pop vinyl',
    taskTitle: 'Nth Child Pseudo-selector',
    description: 'Select an element by its order in another element',
    exampleTitle: 'Example',
    levelName: ':nth-child(J)',
    example: 'h3:nth-child(5) select the fifth <h5> ',
    selectors: [
      { parent: 'pop', classParent: 'funk' },
      { parent: 'pop' },
      { parent: 'pop', classParent: 'pink' },
      { parent: 'pop', isTarget: true },
      { parent: 'pop' },
    ],
    correctSelector: 'pop:nth-child(4)',
  },
  {
    mainTitle: 'Select the new works',
    taskTitle: 'Negation Pseudo-class',
    description: 'Select all elements that don"t match the negation selector',
    exampleTitle: 'Example',
    levelName: ':not(G)',
    example: ':not(.crazy) selects all elements that do not have class="crazy".',
    selectors: [
      { parent: 'pop', isTarget: true },
      { parent: 'pop', classParent: 'old', child: 'synth', classChild: 'old' },
      { parent: 'acid', isTarget: true },
      { parent: 'pop', classParent: 'old', child: 'synth', isChildTarget: true },
    ],
    correctSelector: ':not(.old)',
  },
  {
    mainTitle: 'Select extra vinyls',
    taskTitle: 'Combine the Universal Selector',
    description: 'J *  this selects all elements inside of J',
    exampleTitle: 'Example',
    levelName: 'J  *',
    example: 'div.fun * selects every element inside all <div class="fun"> elements.',
    selectors: [
      { parent: 'pop' },
      { parent: 'techno', child: 'acid', isChildTarget: true },
      { parent: 'acid' },
      { parent: 'techno', child: 'house', isChildTarget: true },
      { parent: 'techno', child: 'pop', isChildTarget: true },
    ],
    correctSelector: 'techno *',
  },
];

export default Levels;
